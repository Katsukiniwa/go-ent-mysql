// Code generated by ent, DO NOT EDIT.

package ent

import (
	"github.com/katsukiniwa/kubernetes-sandbox/product/ent/history"
	"github.com/katsukiniwa/kubernetes-sandbox/product/ent/product"
	"github.com/katsukiniwa/kubernetes-sandbox/product/ent/schema"
	"github.com/katsukiniwa/kubernetes-sandbox/product/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	historyFields := schema.History{}.Fields()
	_ = historyFields
	// historyDescAmount is the schema descriptor for amount field.
	historyDescAmount := historyFields[1].Descriptor()
	// history.DefaultAmount holds the default value on creation for the amount field.
	history.DefaultAmount = historyDescAmount.Default.(int)
	// historyDescID is the schema descriptor for id field.
	historyDescID := historyFields[0].Descriptor()
	// history.IDValidator is a validator for the "id" field. It is called by the builders before save.
	history.IDValidator = historyDescID.Validators[0].(func(int) error)
	productFields := schema.Product{}.Fields()
	_ = productFields
	// productDescStock is the schema descriptor for stock field.
	productDescStock := productFields[0].Descriptor()
	// product.DefaultStock holds the default value on creation for the stock field.
	product.DefaultStock = productDescStock.Default.(int)
	// product.StockValidator is a validator for the "stock" field. It is called by the builders before save.
	product.StockValidator = productDescStock.Validators[0].(func(int) error)
	// productDescTitle is the schema descriptor for title field.
	productDescTitle := productFields[1].Descriptor()
	// product.DefaultTitle holds the default value on creation for the title field.
	product.DefaultTitle = productDescTitle.Default.(string)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescID is the schema descriptor for id field.
	userDescID := userFields[0].Descriptor()
	// user.IDValidator is a validator for the "id" field. It is called by the builders before save.
	user.IDValidator = userDescID.Validators[0].(func(int) error)
}
